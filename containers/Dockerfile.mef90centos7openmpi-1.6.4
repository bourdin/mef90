# Multiple stage build of a centos 7 based mef90 development container
# build the debug or optimized version with
# docker build -t mef90centos7openmpi -f Dockerfile.mef90openmpi-1.6.4 --target mef90centos7OpenMPI .

# Use an official Python runtime as a parent image
FROM centos:7 AS centos7mef90base


# install development tools
RUN yum -y install epel-release deltarpm
RUN yum -y update

RUN yum install -y git patch make cmake gmake perl m4 valgrind valgrind-devel dos2unix wget man sudo which zlib zlib-devel blas blas-devel lapack lapack-devel boost-devel compat-openmpi16-devel gcc-c++ mesa-libGLU libXrender libXcursor libXft libXinerama python-devel
ENV MPI_HOME /usr/lib64/compat-openmpi16
ENV PATH $MPI_HOME/bin:$PATH 
ENV LD_LIBRARY_PATH $MPI_HOME/lib:$LD_LIBRARY_PATH

RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py; python get-pip.py
RUN pip install pyaml numpy matplotlib

## Install gmsh
RUN curl http://gmsh.info/bin/Linux/gmsh-3.0.6-Linux64.tgz | tar zxvf - --strip-components=1 -C /usr/local 
RUN curl http://gmsh.info/bin/Linux/gmsh-4.4.1-Linux64.tgz | tar zxvf - --strip-components=1 -C /usr/local 


FROM centos7mef90base AS centos7mef90OpenMPI164O
### Build petsc and snlp
ENV PETSC_DIR  /opt/HPC/petsc-3.3-mef90
ENV PETSC_ARCH centos7-gcc4.8-openmpi1.6.4-mef90-O
ENV PATH $PETSC_DIR/bin:$PETSC_DIR/$PETSC_ARCH/bin:$PATH

RUN git clone --single-branch --branch mef90-3.3 https://gitlab.com/blaisebourdin/petsc.git ${PETSC_DIR}
RUN mkdir -p /opt/HPC/petsc-3.3-mef90/${PETSC_ARCH}/cbind/include /opt/HPC/petsc-3.3-mef90/${PETSC_ARCH}/forbind/include
RUN cd ${PETSC_DIR}; ./configure        \
    COPTFLAGS='-g -O3 -march=native'  \
    CXXOPTFLAGS='-g -O3 -march=native'\
    FOPTFLAGS='-g -O3 -march=native'  \
    --download-exodusii=1             \
    --download-f-blas-lapack=1        \
    --download-chaco=1                \
    --download-hdf5=1                 \
    --download-hypre=1                \
    --download-metis=1                \
    --download-ml=1                   \
    --download-netcdf=https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-4.3.3.1.tar.gz \
    --download-parmetis=1             \
    --download-sowing=1               \
    --download-triangle=1             \
    --download-yaml=1                 \
    --with-boost=1                    \
    --with-clanguage=C++              \
    --with-debugging=0                \
    --with-fortran-datatypes=1        \
    --with-gnu-compilers=1            \
    --with-mpi-dir=$MPI_HOME          \
    --with-shared-libraries=1         \
    --with-sieve=1                    \
    --with-c2html=0                   \
    --with-x11=0;                     \
    make PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} all

ENV SNLP_DIR /opt/HPC/snlp-${PETSC_ARCH}
RUN mkdir /opt/HPC/src
RUN git clone https://github.com/bourdin/SNLP.git /opt/HPC/src/snlp
RUN cd /opt/HPC/src/snlp; make clean; make; make install


FROM centos7mef90OpenMPI164O AS mef90centos7OpenMPI
ENV MEF90_DIR /opt/HPC/mef90
ENV PATH $MEF90_DIR/bin/$PETSC_ARCH:$MEF90_DIR/bin:$PATH
ENV PYTHONPATH $MEF90_DIR/python:$PYTHONPATH

RUN cd /opt/HPC; git clone https://github.com/bourdin/mef90 $MEF90_DIR
RUN mkdir -p $MEF90_DIR/lib/$PETSC_ARCH/
RUN cd $PETSC_DIR/externalpackages/exodusii-5.22b/; gcc -shared -L $PETSC_DIR/$PETSC_ARCH/lib -lnetcdf -o $PETSC_DIR/$PETSC_ARCH/lib/libexodus.so cbind/src/*.o
RUN cd $MEF90_DIR; make vDef

#RUN useradd -m -U mef90
#RUN chown -R mef90:mef90 /opt/HPC
#USER mef90
