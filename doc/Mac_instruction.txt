INSTALLATION OF MEF90/vDef ON A MAC.

### Install xquartz from https://www.xquartz.org

### Install the xcode command line tools:
    xcode-select --install

### Install Homebrew following the instructions from https://brew.sh :
    /usr/bin/ruby -e "$(curl â€“fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

### Install more development libraries required to compile petsc:
    brew install boost cmake gcc mercurial wget mpich


### Get mef90 and snlp from bitbucket
    mkdir ~/Development
    cd ~/Development
    hg clone https://bitbucket.org/bourdin/mef90-sieve
    git clone https://bourdin@bitbucket.org/bourdin/snlp.git

### Get petsc
    wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.3-p7.tar.gz
    tar zxvf petsc-3.3-p7.tar.gz

### Set some environment variables 
    export PETSC_DIR=$HOME/Development/petsc-3.3-p7
    export PETSC_ARCH=mef90-gcc-O
    export MEF90_DIR=$HOME/Development/mef90-sieve
    export SNLP_DIR=$HOME/Development/snlp-$PETSC_ARCH

### Add the three previous commands to the end of ~/.bashrc 
### (do that only once, although it won't hurt if you do it multiple times)
    echo export PETSC_DIR=$HOME/Development/petsc-3.3-p7 >> ~/.bashrc
    echo export PETSC_ARCH=mef90-gcc-O >> ~/.bashrc
    echo export MEF90_DIR=$HOME/Development/mef90-sieve >> ~/.bashrc
    echo export SNLP_DIR=$HOME/Development/snlp-$PETSC_ARCH  >> ~/.bashrc

### Apply several patches to PETSc 3.3
    cd $PETSC_DIR; for d in $MEF90_DIR/patches/[0-1]*; do patch -p1 < $d; done
    cd $PETSC_DIR; for d in $MEF90_DIR/patches/f[0-1]*; do patch -p1 < $d; done  
    cd $PETSC_DIR/config/BuildSystem; for d in $MEF90_DIR/patches/b0*; do patch -p1 < $d; done


### Configure PETSc 3.3 for mef90
    ./configure                           \
       COPTFLAGS='-O3 -march=native'      \
       CXXOPTFLAGS='-O3 -march=native'    \
       FOPTFLAGS='-O3 -march=native'      \
        --download-chaco=1                \
        --download-exodusii=1             \
        --download-hypre=1                \
        --download-ml=1                   \
        --download-netcdf=ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.3.3.1.tar.gz      \
        --download-yaml=1                 \
        --with-boost=1                    \
        --with-boost-dir=/usr/local       \
        --with-clanguage=C++              \
        --with-cmake=cmake                \
        --with-debugging=0                \
        --with-fortran-datatypes=1        \
        --with-shared-libraries=1         \
        --with-sieve                      \
        --with-x11=1                      \
        --with-clib-autodetect=0          \
        --with-fortranlib-autodetect=0

### Compile petsc (this will take a while and display many warning messages)
    make PETSC_DIR=$HOME/Development/petsc-3.3-p7 PETSC_ARCH=mef90-gcc-O all

### Create two folders in the PETSc installation tree in order to silence a few warnings:
    mkdir -p ${PETSC_DIR}/petsc-3.3-p7/${PETSC_ARCH}/cbind/include
    mkdir -p ${PETSC_DIR}/petsc-3.3-p7/${PETSC_ARCH}/forbind/include

### OPTIONAL: Build exodus python binding
    cd $PETSC_DIR/externalpackages/exodusii-5.22b
    gcc -dynamiclib -L $PETSC_DIR/$PETSC_ARCH/lib -lnetcdf -o $PETSC_DIR/$PETSC_ARCH/lib/libexodus.dylib cbind/src/*.o

### Compile SNLP
    cd ~/Development/snlp
    make
    make install

### Compile mef90
    cd $MEF90_DIR
    make vDef

### Test
    cd vDef/data
    vDef -geometry Beam1x10-tri3.gen -options_file_yaml test7.yaml -result Beam_out.gen

### OPTIONAL: Install visit from https://visit.llnl.gov
### OPTIONAL: Install gmsh mesh generator from http://gmsh.info
### OPTIONAL: Get additional examples: 
       cd $MEF90_DIR
       hg clone https://bitbucket.org/bourdin/mef90-tutorial-files
